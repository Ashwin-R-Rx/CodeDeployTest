name: Create SQS Queue and Send Message

on:
  workflow_dispatch: 
  push: # Trigger on push to main branch
    branches:
      - main

jobs:
  sqs_job:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Install Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7 # Specify the required version

      # Step 3: Configure AWS CLI
      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region us-east-1 # Replace with your region
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Step 4: Check if SQS Queue Exists
      - name: Check SQS Queue
        id: check_queue
        run: |
          QUEUE_NAME="GitHubActionsQueue"
          QUEUE_URL=$(aws sqs get-queue-url --queue-name $QUEUE_NAME --output text --query QueueUrl 2>/dev/null || echo "NOT_FOUND")
          echo "QUEUE_URL=$QUEUE_URL" >> $GITHUB_ENV
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Step 5: Create SQS Queue with Terraform
      - name: Create SQS Queue with Terraform
        if: env.QUEUE_URL == 'NOT_FOUND'
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve
          QUEUE_URL=$(terraform output -raw queue_url 2>/dev/null | tr -d '\n' | tr -d '\r')
          echo "QUEUE_URL=$QUEUE_URL" >> $GITHUB_ENV
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Step 6: Send Message to SQS
      - name: Send Message to SQS
        run: |
          echo "Sending message to SQS Queue: $QUEUE_URL"
          aws sqs send-message \
            --queue-url "$QUEUE_URL" \
            --message-body "Success Message from GitHub Actions!" \
            --delay-seconds 0
          echo "SQS Message Sent"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          QUEUE_URL: ${{ env.QUEUE_URL }}
